Title: Using Batik

#Using Batik


The Batik toolkit has a number of modules that can be used to provide SVG support to your application. This section includes resources for explaining how to use these modules.



Architecture
:
The [architecture](../using/architecture.html) page gives an overview of how the various modules in Batik fit together.


Javadoc APIs
:
The [Javadoc APIs](../using/../javadoc/) document all of the classes packaged with Batik.


DOM API
:
The [DOM API](../using/dom-api.html) page explains how to use the DOM interfaces to create and render SVG documents.


Parsers
:
The [Parsers](../using/parsers.html) page describes the parser classes that can be used for parsing the microsyntaxes of SVG (such as path data and transform lists).


Scripting
:
The scripting pages ([Scriping with ECMAScript](../using/scripting/ecmascript.html), [Scripting with Java](../using/scripting/java.html) and [Security](../using/scripting/security.html)) document how to programmatically manipulate SVG documents, and how script interpreters can be used and extended in Batik.


SVG generator
:
The [SVG Generator](../using/svg-generator.html) page documents the `SVGGraphics2D` class, which can be used to construct SVG documents from Java2D drawing commands.


Swing components
:
The [Swing components](../using/swing.html) page describes the SVG canvas component, the primary method for displaying SVG content in Swing applications.


Transcoder API
:
The [Transcoder API](../using/transcoder.html) page explains how to use the transcoder classes to convert SVG content to other formats (raster or vector).


Extending Batik
:
The [Extending Batik](../using/extending.html) page lists the parts of the Batik API that are extensible and explains how to add functionality to the existing modules.
