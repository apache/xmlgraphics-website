Title: Apache(tm) FOP Development: Developer Tools

#Apache&trade; FOP Development: Developer Tools


This page documents items that may be helpful to other developers, especially to those who are new to Apache&trade; FOP. Exhaustive treatment of these topics is better suited to other fora, but the information presented here is intended to deal with FOP-specific issues related to these tools, especially "gotchas", and to help developers get jump-started.

## Developer Checklist { #checklist}

Here is a (probably not comprehensive) list of tools you will need to be a successful FOP developer:


- A java IDE (see [IDE](#ide)).

- A Subversion client (see [Subversion](#svn)).

- Ant (see [Building FOP](../trunk/compiling.html)).

- checkstyle (see [Checkstyle](conventions.html#java-checkstyle) on the conventions page).

- JUnit (see [Basic Testing](testing.html#basic)).

## General Developer Information { #general}

See [the Apache Contributors Tech Guide](https://www.apache.org/dev/contributors.html) for useful information and links for Apache developers, including help with tools and procedures.

## Subversion (SVN) { #svn}

### General { #svn_general}

Visit [Apache XML Graphics Code Repositories](http://xmlgraphics.apache.org/repo.html) for useful information.

You will need a SVN client to be able to gain access to the FOP repository. For general SVN information, visit [Subversion Home](https://subversion.apache.org). A comprehensive list of clients for all operating systems and many IDEs can be found at [the Subversion Links page](https://en.wikipedia.org/wiki/Comparison_of_Subversion_clients). For Microsoft Windows we recommend [TortoiseSVN](https://tortoisesvn.net). The command-line client that comes with Subversion is also very easy to use.

### Step-by-step instruction for downloading FOP using the SVN command-line client { #svn_download}

On the command-line (Windows or Unix), simply run:

`svn co http://svn.apache.org/repos/asf/xmlgraphics/fop/trunk/ fop-trunk`

This will download the FOP trunk into the directory "fop-trunk".

### Step-by-step instructions for downloading FOP using TortoiseSVN (on Windows) { #tortoisesvn_download}


- Create a new, empty directory in a place of your choice.

- Right-click the new directory and select "SVN Checkout..." from the context menu.

- Enter `http://svn.apache.org/repos/asf/xmlgraphics/fop/trunk/` as the URL of the repository.

- Click "OK" and the download should begin.

### Creating Patches { #patches}


-  `cd` to a directory that contains all of the changes that you wish to include in the patch. To comprehend the entire distribution, `cd` to the top directory where you checked out the sources.

- Run: `svn up` to make sure the diff is created against the latest sources.

- Run: `svn diff >mypatch.diff`

    This will write the patch to the file "mypatch.diff".

- If you are running TortoiseSVN, you can select "Create Patch..." in the TortoiseSVN context menu.

### Documentation { #svn-doc}


- [online resource] [The Subversion Home Page](https://subversion.apache.org).

- [electronic manual] [Version Control with Subversion](http://svnbook.red-bean.com) (official Subversion manual). Note that this manual applies to the command-line version of SVN.

- [online resource] [Comprehensive list of links to documentation and Subversion clients and plugins.](https://en.wikipedia.org/wiki/Comparison_of_Subversion_clients)

## Integrated Development Environments (IDEs) { #ide}

An IDE is not required, but will generally be found to be helpful, especially for serious debugging and refactoring.

Borland's JBuilder 7/8 does not support Ant builds unless you have the Enterprise Edition (which is quite expensive). This causes problems with any code that is generated by the Ant build. First, you must run the Ant build before you can use the IDE. Second, when you are editing in the IDE, you must be editing the generated files, which means that you must make any changes to the source files in another editor. This is less serious for development on the trunk, but in the maintenance branch, all source files were "generated".

Sun ONE Studio Four does support Ant, but seems to use a built-in version, and as of this writing chokes on the FOP build file, saying that it is not valid. There is awkward because there is no official DTD for Ant, and it may be merely an Ant version issue.

Additional notes on setting up FOP within an IDE (ex. Eclipse) in the [Wiki](https://cwiki.apache.org/confluence/display/XMLGRAPHICSFOP/FOPIDESetupGuide).
