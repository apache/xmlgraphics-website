Title: Apache(tm) FOP Development: Release Mechanics

#Apache&trade; FOP Development: Release Mechanics


## Introduction {#intro}

This page documents the process of creating a Apache&trade; FOP release. FOP releases are coordinated by some designated member of the team. The purpose of documenting it here is to facilitate consistency, ensure that the process is captured, and to allow others to comment on the process.

The checklist below is based on a combination of input from from Christian Geisert and Simon Pepping.

## Checklist {#checklist}


- Determine which open bugs must be solved before a release can take place (release critical bugs). Make this bug depend on each release critical bug and write a short argument why the bug is release critical.

- Determine whether this is a Release Candidate or a Release.

- Determine whether further testing is required.

- Commit any outstanding changes

- Create a branch called `branches/fop-v_vv`

- Edit release notes (`README` and `status.xml` in the root).

- Check and update the copyright year in NOTICE and build.xml.

- Update version number in `build.xml` (not to be merged back into trunk).

- Build the dist files (`build[.sh] dist`) and upload them to your web directory on `people.apache.org`

- Ask on `fop-dev` ML to check the branch and the generated dist files for errors.

- Tag the source tree with the release ID. For example, if the release is 1.0: `svn copy https://svn.apache.org/repos/asf/xmlgraphics/fop/branches/fop-1_0 https://svn.apache.org/repos/asf/xmlgraphics/fop/tags/fop-1_0`

- Make a fresh checkout with the just created tag: `svn co https://svn.apache.org/repos/asf/xmlgraphics/fop/tags/fop-1_0`

- Copy the `jai_core.jar` and `jai_codec.jar` to `lib`.

- Copy the hyphenation patterns jar file `fop-hyph.jar` to `lib` (e.g. from `http://sourceforge.net/projects/offo`

- Alternatively, create a `build-local.properties` file that points to the above libraries.

- Run `build[.sh] dist`. Do this using Sun JDK 1.5 or later. A Forrest installation is needed.

- Create signatures. Don't forget to upload your KEY: `gpg -a -b --force-v3-sigs fop-1.0-src.tar.gz` etc.

- Upload the dist and signature files to your web directory on people.apache.org (An account on minotaur is needed): `scp fop-1.0*.tar.gz* chrisg@people.apache.org:public_html/`

- Check permissions: `chmod 664 ... ; chgrp xmlgraphics ...`

- Add MD5 sums: `md5 fop-1.0-src.tar.gz > fop-1.0-src.tar.gz.md5` etc.

- Make a test download.

- Start a vote for the release on `general@xmlgraphics.apache.org`. The message should point to the release files and list the MD5 sums (`cat *.md5`). The vote should remain open for 72hrs.

- When the release is accepted, copy the release files, their md5 sum files and the signature files to `/www/www.apache.org/dist/xmlgraphics/fop/` in the subdirectories `source` and `binaries`. Create links to all files in the `fop` directory. Remove the links to the files of the previous version.

- Update `HEADER.html` and `README.html` in `people.apache.org:/www/www.apache.org/dist/xmlgraphics/fop/`.

- Wait 24 hours (for the mirrors to catch up).

- Merge the changes of the subversion release branch back into trunk (not the version number in the build file) and delete the branch.

- In CMS doc, copy trunk directory to a new directory with the new version number.

- In CMS doc, copy following files to the new version directory:
    - `known-issues.mdtext` as `knownissues-overview.mdtext`

- In CMS doc, update all markdown linkIds to the new release (elementids are of the form `[linkId]: fop_version/path_to_page_XXX"` at the beginning of the files):
    - `faq.mdtext`
    - `fo.mdtext`
    - `index.mdtext`
    - `maillist.mdtext`
    - `quickstartguide.mdtext`

- In CMS doc, update the following files to the new release
    - `fop-sidenav.mdtext`
    - `download.mdtext`
    - `compliance.mdtext` (version number in new release column)

- In CMS doc, in the new version directory, update the following files:
    - `index.mdtext`
    - `compiling.mdtext` (change the introduction for trunk to that for a release).

- Publish the updated documentation to the FOP website.

- Post announcements on `fop-dev` and `fop-user` and other related mailing lists.

- Ask an FOP Jira admin to add a Jira entry for the new release id, or create an issue at `https://issues.apache.org/jira/browse/INFRA`.

- Deploy the maven bundle.

## Resources {#other-checklists}

The following is a sample of some other project release checklists, which might be consulted for ideas:


-  [Apache Batik](http://svn.apache.org/repos/asf/xmlgraphics/batik/trunk/MAINTAIN)

-  [Apache Ant](http://svn.apache.org/repos/asf/ant/core/trunk/ReleaseInstructions)

-  [Apache Cactus](http://jakarta.apache.org/cactus/participating/release_checklist.html)



Following are links with information about mirroring:


-  [Apache Mirroring](http://www.apache.org/dev/mirrors.html)

- Stefan Bodewig's [Making your Downloads Mirrorable](http://people.apache.org/~bodewig/mirror.html)

## Announcing the release {#announcements}

Here's a suggested list of places where to announce new FOP releases:


- fop-dev@xmlgraphics.apache.org

- fop-users@xmlgraphics.apache.org

- general@xmlgraphics.apache.org

- general@xml.apache.org

- announce@apache.org (from your apache.org address)

- xsl-list@lists.mulberrytech.com (subscriber-only)

- xsl-fo@yahoogroups.com (subscriber-only)

- www-xsl-fo@w3.org

- docbook-apps@lists.oasis-open.org (subscriber-only)

- dita-users@yahoogroups.com (subscriber-only) (http://dita-ot.sourceforge.net/)

- http://xslfo-zone.com/news/index.jsp

- http://www.w3.org/Style/XSL/

- http://freshmeat.net/projects/fop/
